################################################################################
import common
import tmdb
import torrent2http

################################################################################
KICKASSTORRENTS = 'http://kickass.to'

################################################################################
def MetadataObjectForURL(url, art_callback, thumb_callback):
	imdb_id = get_imdb_id(url)
	if imdb_id:
		return tmdb.create_movie_object(imdb_id, art_callback, thumb_callback)
	else:
		html  = HTML.ElementFromURL(url)
		metadata_object       = MovieObject()
		metadata_object.title = html.xpath('//*[@class="torrentName novertmarg"]/a/span/text()')[0]
		return metadata_object

################################################################################
def MediaObjectsForURL(url, play_func):
	html   = HTML.ElementFromURL(url, cacheTime=CACHE_1DAY)
	magnet = html.xpath('//*[@class="magnetlinkButton"]/@href')[0]

	media_objects = []

	media_object = MediaObject()
	media_object.add(PartObject(key=Callback(play_func, url=url, magnet=magnet)))
	media_objects.append(media_object)

	return media_objects

################################################################################
def tmdb_get_art(url):
	return tmdb.get_art(get_imdb_id(url))

###############################################################################
def tmdb_get_thumb(url):
	return tmdb.get_thumb(get_imdb_id(url))

################################################################################
def get_imdb_id(url):
	try:
		html    = HTML.ElementFromURL(url, cacheTime=CACHE_1DAY)
		imdb_id = 'tt' + html.xpath('//*[@id="movieinfo"]/div/ul[1]/li[2]/a/text()')[0]
		return imdb_id
	except:
		Log.Error('[BitTorrent][kickasstorrents] Couldn\'t find IMDB ID')

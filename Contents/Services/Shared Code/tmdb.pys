###############################################################################
import decorators
import re

###############################################################################
API_KEY = '3974ccf2babc35fdc8c19e460937396e'

RE_MOVIE_TITLE = re.compile('(.+)\s+(\(|\[)?(\d{4})(\)|\])?\s+(.+)')

###############################################################################
@decorators.memoized
def get_config():
    json_url  = 'http://api.themoviedb.org/3/configuration?api_key={0}'.format(API_KEY)
    json_data = JSON.ObjectFromURL(json_url, cacheTime=CACHE_1WEEK)
    return json_data

###############################################################################
@decorators.memoized
def get_data(movie_id):
    json_url  = 'http://api.themoviedb.org/3/movie/{0}?append_to_response=credits&api_key={1}'.format(movie_id, API_KEY)
    json_data = JSON.ObjectFromURL(json_url, cacheTime=CACHE_1WEEK)
    return json_data

###############################################################################
@decorators.memoized
def get_tmdb_id_from_title(movie_title, movie_year):
    try:
        if movie_title and movie_year:
            json_url  = 'http://api.themoviedb.org/3/search/movie?query={0}&year={1}&api_key={2}'.format(String.Quote(movie_title), movie_year, API_KEY)
            json_data = JSON.ObjectFromURL(json_url, cacheTime=CACHE_1WEEK)
            return (json_data['results'][0]['id'], json_data['results'][0]['title'])
    except:
        pass

    #Log.Error('[BitTorrent][tmdb] Failed to determine tmdb_id for {0} ({1})'.format(movie_title, movie_year))
    return (None, movie_title)

###############################################################################
@decorators.memoized
def get_imdb_id_from_torrent_title(torrent_title):
    try:
        movie_title = RE_MOVIE_TITLE.search(torrent_title).group(1)
        movie_year  = RE_MOVIE_TITLE.search(torrent_title).group(3)

        return get_imdb_id_from_title(movie_title, movie_year)
    except:
        return None

###############################################################################
@decorators.memoized
def get_imdb_id_from_title(movie_title, movie_year):
    tmdb_id, movie_title = get_tmdb_id_from_title(movie_title, movie_year)
    if tmdb_id:
        return get_data(tmdb_id)['imdb_id']

    #Log.Error('[BitTorrent][tmdb] Failed to determine imdb_id for {0} ({1})'.format(movie_title, movie_year))
    return None

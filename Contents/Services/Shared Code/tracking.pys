###############################################################################
import hashlib
import mixpanel
import uuid

###############################################################################
TOKEN = '56e1b74b86cab75191f17c50d071b0ef'

###############################################################################
def people_set(properties={}, meta={}):
    try:
        meta['$ip'] = Network.PublicAddress

        properties['Server OS']       = Platform.OS
        properties['Server CPU']      = Platform.CPU
        properties['Channel Version'] = common.VERSION

        mp = mixpanel.Mixpanel(TOKEN)
        mp.people_set(get_distinct_id(), properties, meta)
        Log.Info('Sent people properties')
    except Exception as exception:
        Log.Error('Unhandled exception: {0}'.format(exception))

###############################################################################
def track(event, properties={}, meta={}):
    try:
        if Client.Product or Client.Platform:
            meta['$ip'] = Network.PublicAddress

            properties['Server OS']       = Platform.OS
            properties['Server CPU']      = Platform.CPU
            properties['Channel Version'] = common.VERSION
            properties['Client Product']  = Client.Product
            properties['Client Platform'] = Client.Platform

            mp = mixpanel.Mixpanel(TOKEN)
            mp.track(get_distinct_id(), event, properties, meta)
            Log.Info('Sent tracking event: {0}'.format(event))
    except Exception as exception:
        Log.Error('Unhandled exception: {0}'.format(exception))

###############################################################################
def get_distinct_id():
    return hashlib.sha1(Platform.OS + Platform.CPU + Network.PublicAddress).hexdigest()
